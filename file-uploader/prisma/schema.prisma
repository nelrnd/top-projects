// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  folders    Folder[] @relation("Folders")
  rootFolder Folder?  @relation("RootFolder")
  files      File[]
}

model Folder {
  id             Int      @id @default(autoincrement())
  name           String
  user           User     @relation("Folders", fields: [userId], references: [id])
  userId         Int
  rootOf         User?    @relation("RootFolder", fields: [rootOfId], references: [id])
  rootOfId       Int?     @unique
  parentFolder   Folder?  @relation("ParentFolder", fields: [parentFolderId], references: [id])
  parentFolderId Int?
  folders        Folder[] @relation("ParentFolder")
  files          File[]
  createdAt      DateTime @default(now())
}

model File {
  id             Int      @id @default(autoincrement())
  name           String
  type           String   @db.VarChar(255)
  size           Int
  path           String
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  parentFolder   Folder?  @relation(fields: [parentFolderId], references: [id])
  parentFolderId Int?
  addedAt        DateTime @default(now())
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
}
